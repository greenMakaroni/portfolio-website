/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import useWindowDimensions from '../../useWindowDimensions';

export default function Island({ setLoaded }) {

  const { height, width } = useWindowDimensions();
  const group = useRef()
  const { nodes, materials } = useGLTF('./src/assets/island.glb')

  useFrame((state, delta) => group.current.rotation.y += 0.002)
  
  const IslandPos = width > 1100 ? [12, -3, -14] 
  : width > 900 ? [4, -4, -15]
  : width > 350 ? [2, -6, -16]
  : [0, -8, -20]

  useEffect(() => {
    setLoaded(true);
    return () => setLoaded(false);
  }, [])
  
  return (
    <group ref={ group } dispose={ null } position={ IslandPos } rotation={ [0.17, 1.5, 0] }>
      <mesh castShadow geometry={nodes.trunk.geometry} material={materials.trunk} position={[0, 3.51, 1.18]} />
      <mesh castShadow geometry={nodes.leaf.geometry} material={materials.bonsai_leaf} position={[-2.75, 7.37, 3.31]} />
      <mesh receiveShadow geometry={nodes.island_top.geometry} material={materials.platform} scale={7.42} />
      <mesh castShadow geometry={nodes.rocks.geometry} material={materials.platform} position={[4.6, 3.09, 3.63]} />
      <mesh geometry={nodes.waterlily.geometry} material={materials.bonsai_leaf} position={[-1.95, 3.42, -1.54]} rotation={[-0.06, -0.03, 0.08]} scale={1.19} />
      <mesh castShadow geometry={nodes.bench.geometry} material={materials.platform} position={[-1.24, 3.9, -4.8]} rotation={[-0.18, 0.79, -0.02]} scale={[0.12, 0.1, 0.1]} />
      <mesh castShadow geometry={nodes.pathBottom.geometry} material={materials.platform} position={[7.13, 2.27, -0.51]} rotation={[0.43, 0.85, -0.7]} scale={[1, -0.13, 1]} />
      <mesh castShadow geometry={nodes.katana.geometry} material={materials.platform} position={[-4.68, 4.52, 3.53]} rotation={[-2.74, 0.15, 2.93]} scale={[0.16, 0.01, 0.16]} />
      <mesh castShadow geometry={nodes.grass.geometry} material={materials.platform} position={[3.51, 2.51, 4.66]} rotation={[0.11, -0.17, -0.32]} scale={0.3} />
      <mesh castShadow geometry={nodes.lanternBottom.geometry} material={materials.platform} scale={7.42} />
      <mesh castShadow geometry={nodes.bigRocks.geometry} material={materials.platform} position={[4.6, 3.09, 3.63]} />
      <mesh receiveShadow geometry={nodes.pathTop.geometry} material={materials.platform} position={[7.13, 2.27, -0.51]} rotation={[0.43, 0.85, -0.7]} scale={[1, -0.13, 1]} />
      <mesh geometry={nodes.candle1.geometry} material={materials.platform} position={[4.61, 4.26, 0.51]} rotation={[0.01, -0.07, -0.19]} scale={[0.08, 0.16, 0.08]} />
      <mesh receiveShadow geometry={nodes.lanternTop.geometry} material={materials.platform} scale={7.42} />
      <mesh geometry={nodes.candle2.geometry} material={materials.platform} position={[3.34, 4.42, -3.66]} rotation={[-0.2, -0.11, -0.15]} scale={[0.08, 0.16, 0.08]} />
      <mesh geometry={nodes.islandBottom.geometry} material={materials.platform} scale={7.42} />
      <mesh castShadow geometry={nodes.gate.geometry} material={materials.platform} position={[-1.49, 3.31, 3.73]} rotation={[0.08, 0.05, 0]} scale={[0.47, -0.07, 0.47]} />
    </group>
  )
}

useGLTF.preload('./src/assets/island.glb')